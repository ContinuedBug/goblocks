# Full Goblocks config example with all available block types and options.

# The global section contains global config options.

global:
    # debug is a boolean indicating whether or not to pretty print the json
    # output. Note that this setting requires a restart in order to take
    # effect.
    debug: False
    # refresh_interval is a floating point number indicating the time interval
    # in seconds between when Goblocks sends an updated status line to i3bar.
    # Basically, it controls Goblocks' "frame rate".
    refresh_interval: 1

# Below is the per-block configuration.

# Each block must have a block_index field indicating the block's position.
# block_index values must start with 1 and be sequential.

# Each block must have an update_interval field indicating the time interval in
# seconds between block updates. This is a floating point number, allowing for
# fractions of a second. Note that this interval does not affect the refresh
# rate of Goblocks' output; it only impactes the timing in which a block's info
# gets updated.

# Each block may optionally have a label field indicating a prefix string to
# prepend to the block's status text.

# Some block types can have multiple instances, which are specified in a YAML
# array. See the temperatures and interfaces block configs.

# If a block has an update_signal field, then that block will be updated and
# Goblocks refreshed when Goblocks receives an RTMIN signal offset by the given
# signal number. See the volume block config.
# For example, if update_signal is 1, then running 'pkill -RTMIN+1 goblocks'
# will cause Goblocks to update the block and refresh.
# The update_signal value must be 1 or greater.

blocks:
    # Only linux mdraid is supported.
    raid:
        block_index: 1
        update_interval: 1
        label: "R: "

    # The disk block is an aggregate status of overall filesystem usage.
    disk:
        block_index: 2
        update_interval: 1
        label: "D: "
        # filesystems is a map of strings to floating point numbers. The strings
        # are the filesystems you want to check, and the numbers are the
        # critical usage percentages for those filesystems.
        filesystems:
            /: 90
            /home: 90

    load:
        block_index: 3
        update_interval: 1
        label: "L: "
        crit_load: 4

    # The memory block displays available memory.
    memory:
        block_index: 4
        update_interval: 1
        label: "M: "
        crit_mem: 1

    temperatures:
        - block_index: 5
          update_interval: 1
          cpu_temp_path: /sys/devices/platform/coretemp.0/hwmon/hwmon1
          crit_temp: 50

    interfaces:
        - block_index: 6
          update_interval: 1
          label: "E: "
          interface_name: enp3s0

        - block_index: 7
          update_interval: 1
          label: "W: "
          interface_name: wlp4s2

    wifi:
        - block_index: 8
          update_interval: 1
          label: "W: "
          interface_name: wlp3s0
          crit_quality: 30

    batteries:
        - block_index: 9
          update_interval: 1
          label: "B0: "
          # The battery number can be found in /sys/class/power_supply/
          battery_number: 0
          crit_battery: 20

    # The volume block currently only supports the ALSA master channel volume.
    volume:
        block_index: 10
        update_interval: 60
        label: "V: "
        update_signal: 1

    time:
        block_index: 11
        update_interval: 0.5
        # The time_format value must be a string in Go's standard time format
        # (see https://golang.org/pkg/time/#pkg-constants).
        time_format: 2006-01-02 15:04:05
