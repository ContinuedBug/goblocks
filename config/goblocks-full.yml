# Full Goblocks config example with all available block types and options.

# The global section contains global config options.

global:
    # debug is a boolean indicating whether or not to pretty print the json
    # output. Note that this setting requires a restart in order to take
    # effect.
    debug: False
    # refresh_interval is a floating point number indicating the time interval
    # in seconds between when Goblocks sends an updated status line to i3bar.
    # Basically, it controls Goblocks' "frame rate".
    refresh_interval: 1

# Below is the per-block configuration. The blocks are defined in a YAML array.

# Each block must have a type field indicating which status indicator to use for
# that block. Different status indicators can have different configuration
# fields.

# Each block must have an update_interval field indicating the time interval in
# seconds between block updates. This is a floating point number, allowing for
# fractions of a second. Note that this interval does not affect the refresh
# rate of Goblocks' output; it only impactes the timing in which a block's info
# gets updated.

# Each block may optionally have a label field indicating a prefix string to
# prepend to the block's status text.

# If a block has an update_signal field, then that block will be updated and
# Goblocks refreshed when Goblocks receives an RTMIN signal offset by the given
# signal number. See the volume block config.
# For example, if update_signal is 1, then running 'pkill -RTMIN+1 goblocks'
# will cause Goblocks to update the block and refresh.
# The update_signal value must be 1 or greater.

# Blocks may optionally have a color field that specifies the default color of
# the block text, using the 6 digit hex RGB format (e.g. #00ff00 for green).

blocks:
    # Only linux mdraid is supported.
    - type: raid
      update_interval: 1
      label: "R: "
      color: "#00ff00"

    # The disk block is an aggregate status of overall filesystem usage.
    - type: disk
      update_interval: 1
      label: "D: "
      # filesystems is a map of strings to floating point numbers. The strings
      # are the filesystems you want to check, and the numbers are the
      # critical usage percentages for those filesystems.
      filesystems:
          /: 90
          /home: 90

    - type: load
      update_interval: 1
      label: "L: "
      crit_load: 4

    # The memory block displays available memory.
    - type: memory
      update_interval: 1
      label: "M: "
      crit_mem: 1

    - type: temperature
      update_interval: 1
      # cpu_temp_path is the path to the "hwmon" directory of the CPU
      # temperature info.
      cpu_temp_path: /sys/devices/platform/coretemp.0/hwmon
      crit_temp: 50

    - type: interface
      update_interval: 1
      label: "E: "
      interface_name: enp3s0

    - type: interface
      update_interval: 1
      label: "W: "
      interface_name: wlp4s2

    - type: wifi
      update_interval: 1
      label: "W: "
      interface_name: wlp3s0
      crit_quality: 30

    - type: battery
      update_interval: 1
      label: "B0: "
      # The battery number can be found in /sys/class/power_supply/
      battery_number: 0
      crit_battery: 20

    # The volume block currently only supports the ALSA master channel volume.
    - type: volume
      update_interval: 60
      label: "V: "
      update_signal: 1

    - type: time
      update_interval: 0.5
      # The time_format value must be a string in Go's standard time format
      # (see https://golang.org/pkg/time/#pkg-constants).
      time_format: 2006-01-02 15:04:05
